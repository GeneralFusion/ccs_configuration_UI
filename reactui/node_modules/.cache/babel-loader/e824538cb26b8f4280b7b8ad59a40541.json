{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\ReactUI\\\\React\\\\reactui\\\\src\\\\CollapsibleChanger.js\",\n    _s = $RefreshSig$();\n\nimport ValueChanger from \"./ValueChanger\";\nimport Grid from '@mui/material/Unstable_Grid2'; // Grid version 2\n\nimport Stack from '@mui/material/Stack';\nimport React, { useState } from 'react';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Menu } from \"@mui/material\";\nimport Accordion from \"@mui/material\";\nimport AccordionDetails from \"@mui/material\";\nimport AccordionSummary from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CollapsibleChanger(props) {\n  _s();\n\n  const [currentIndex, setCurrentIndex] = useState(1);\n  let valueChangerList = [];\n  let items = [];\n\n  const sendChange = newValue => {\n    // console.log(currentIndex);\n    // console.log(props.property);\n    // console.log(newValue);\n    // let x = new Object;\n    // x[currentIndex] = new Object();\n    // x[currentIndex][newValue[0]] = newValue[1];\n    // console.log(x);\n    console.log(newValue);\n    props.onValueChange(newValue);\n  };\n\n  const handleChange = event => {\n    setCurrentIndex(event.target.value);\n  };\n\n  console.log(props.value); // for(const [itemNumber, itemValue] of Object.entries(props.value)){\n  //     items.push(\n  //         <MenuItem key={itemNumber} value={itemNumber}>\n  //             {itemValue.name}\n  //         </MenuItem>\n  //     )\n  // }\n\n  for (const [itemNumber, itemValue] of Object.entries(props.value)) {\n    let tempArray = [];\n\n    for (const [property, value] of Object.entries(itemValue)) {\n      tempArray.push( /*#__PURE__*/_jsxDEV(ValueChanger, {\n        hasBorder: true,\n        property: property,\n        value: value,\n        keyHistory: [...props.keyHistory, currentIndex],\n        propertiesDB: props.propertiesDB,\n        onValueChange: sendChange\n      }, props.propertiesDB[property]['id'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this));\n    }\n\n    valueChangerList.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      children: tempArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this));\n  }\n\n  let ta = [];\n  let keyIndex = currentIndex * items.length;\n  /*keys are how react knows to re-render. \r\n  Since every item has same properties and COULD have same value, \r\n  we must use something unique. Which is the index + currentIndex to always \r\n  make sure we have an offset. We guarantee this offset and uniqueness of keys by multiplying the currentIndex by the items length.\r\n  If items 1,2,3 have 3 properties. (index starts at 1) The keys for item 1: 3,4,5. For item 2: 6,7,8 item:3 9,10,11 \r\n  */\n\n  for (const [property, value] of Object.entries(props.value[currentIndex])) {\n    //Change the one to set to the first element. //MAKE THIS A DROP DOWN TO SELECT WHICH PROPERTIES\n    console.log(value);\n    valueChangerList.push( /*#__PURE__*/_jsxDEV(ValueChanger, {\n      hasBorder: true,\n      property: property,\n      value: value,\n      keyHistory: [...props.keyHistory, currentIndex],\n      propertiesDB: props.propertiesDB,\n      onValueChange: sendChange\n    }, keyIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this));\n    keyIndex++;\n  } // const [valueChangerList, setValueChangerList] = useState(ta);    \n\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 1,\n    sx: {\n      pl: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: currentIndex,\n      onChange: handleChange,\n      sx: {\n        background: '#87bfcc'\n      },\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), valueChangerList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CollapsibleChanger, \"6ZNSuHuLtE2dYbknpMqlWAUQLAk=\");\n\n_c = CollapsibleChanger;\nexport default CollapsibleChanger;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollapsibleChanger\");","map":{"version":3,"names":["ValueChanger","Grid","Stack","React","useState","Select","MenuItem","Menu","Accordion","AccordionDetails","AccordionSummary","CollapsibleChanger","props","currentIndex","setCurrentIndex","valueChangerList","items","sendChange","newValue","console","log","onValueChange","handleChange","event","target","value","itemNumber","itemValue","Object","entries","tempArray","property","push","keyHistory","propertiesDB","ta","keyIndex","length","pl","background"],"sources":["C:/Code/ReactUI/React/reactui/src/CollapsibleChanger.js"],"sourcesContent":["\r\nimport ValueChanger from \"./ValueChanger\";\r\nimport Grid from '@mui/material/Unstable_Grid2'; // Grid version 2\r\nimport Stack from '@mui/material/Stack';\r\nimport React, { useState } from 'react';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { Menu } from \"@mui/material\";\r\nimport Accordion from \"@mui/material\";\r\nimport AccordionDetails from \"@mui/material\";\r\nimport AccordionSummary from \"@mui/material\";\r\nfunction CollapsibleChanger(props){\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(1);\r\n    let valueChangerList = [];\r\n    let items = [];\r\n\r\n    const sendChange = (newValue) => {\r\n        // console.log(currentIndex);\r\n        // console.log(props.property);\r\n        // console.log(newValue);\r\n        // let x = new Object;\r\n        // x[currentIndex] = new Object();\r\n        // x[currentIndex][newValue[0]] = newValue[1];\r\n        // console.log(x);\r\n        console.log(newValue)\r\n        props.onValueChange(newValue)\r\n    }\r\n    const handleChange = (event) => {\r\n        setCurrentIndex(event.target.value);\r\n    }\r\n    console.log(props.value);\r\n  \r\n    // for(const [itemNumber, itemValue] of Object.entries(props.value)){\r\n    //     items.push(\r\n    //         <MenuItem key={itemNumber} value={itemNumber}>\r\n    //             {itemValue.name}\r\n    //         </MenuItem>\r\n    //     )\r\n    // }\r\n    for(const [itemNumber, itemValue] of Object.entries(props.value)){\r\n        let tempArray = [];\r\n        for(const [property, value] of Object.entries(itemValue)){\r\n            tempArray.push(\r\n            \r\n            <ValueChanger hasBorder={true} key={props.propertiesDB[property]['id']} property={property} value={value} keyHistory={[...props.keyHistory, currentIndex]} propertiesDB={props.propertiesDB} onValueChange={sendChange}></ValueChanger>\r\n            \r\n            )\r\n        }\r\n        valueChangerList.push(\r\n            <MenuItem>\r\n                {tempArray}\r\n            </MenuItem>\r\n        )\r\n    }\r\n    let ta = [];\r\n    let keyIndex = currentIndex * items.length;\r\n    /*keys are how react knows to re-render. \r\n    Since every item has same properties and COULD have same value, \r\n    we must use something unique. Which is the index + currentIndex to always \r\n    make sure we have an offset. We guarantee this offset and uniqueness of keys by multiplying the currentIndex by the items length.\r\n    If items 1,2,3 have 3 properties. (index starts at 1) The keys for item 1: 3,4,5. For item 2: 6,7,8 item:3 9,10,11 \r\n    */\r\n    for(const [property, value] of Object.entries(props.value[currentIndex])){//Change the one to set to the first element. //MAKE THIS A DROP DOWN TO SELECT WHICH PROPERTIES\r\n        console.log(value);\r\n        valueChangerList.push(\r\n            <ValueChanger hasBorder={true} key={keyIndex} property={property} value={value} keyHistory={[...props.keyHistory, currentIndex]} propertiesDB={props.propertiesDB} onValueChange={sendChange}></ValueChanger>\r\n        )\r\n        keyIndex++;\r\n    }\r\n   // const [valueChangerList, setValueChangerList] = useState(ta);    \r\n\r\n    return(\r\n        \r\n        <Stack spacing={1} sx={{pl: 0,}}>\r\n            <Select value={currentIndex} onChange={handleChange} sx={{background:'#87bfcc'}}>\r\n                {items}\r\n            </Select>\r\n            {valueChangerList}\r\n        </Stack>\r\n\r\n    )\r\n}\r\n\r\nexport default CollapsibleChanger;"],"mappings":"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"},"metadata":{},"sourceType":"module"}