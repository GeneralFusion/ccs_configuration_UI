{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\ReactUI\\\\React\\\\reactui\\\\src\\\\Controller.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@mui/material/Button';\nimport Client from './Client.js';\nimport React, { useState } from 'react';\nimport { loadYAML } from './YAML.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet mainConfig;\n\nfunction Controller(props) {\n  _s();\n\n  const [clients, setClients] = useState([]);\n  const yamlFile = loadYAML(\"test.yml\");\n  console.log(\"Controller rerender\");\n\n  const changeValue = _ref => {\n    let [clientNumber, [keyHistory, newValue]] = _ref;\n    //Array destructuring. Will take the array of property and value and make it into two variables. \n    let client = mainConfig[clientNumber];\n    console.log(client);\n\n    for (let i = 0; i < keyHistory.length - 1; i++) {\n      //Go through keyhistory (except last one). Now client is pointing to the last object which is the {proprety: value}.\n      client = client[keyHistory[i]];\n    }\n\n    client[keyHistory[keyHistory.length - 1]] = newValue;\n    console.log(client);\n    console.log(mainConfig);\n  };\n\n  const generateClients = (json, propertiesDB) => {\n    let tempArray = [];\n\n    for (const [clientNumber, clientData] of Object.entries(json)) {\n      tempArray.push( /*#__PURE__*/_jsxDEV(Client, {\n        sx: {},\n        clientNumber: clientNumber,\n        properties: clientData,\n        propertiesDB: propertiesDB,\n        onValueChange: changeValue\n      }, clientNumber, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 28\n      }, this));\n    }\n\n    return tempArray;\n  };\n\n  const getData = async () => {\n    try {\n      const req = await fetch(`/getData/`, {\n        method: 'GET'\n      });\n      const json = await req.json();\n      return json;\n    } catch (err) {\n      console.log(\"Error fetching data\");\n    }\n  };\n\n  const initController = () => {\n    const data = getData();\n    const propertiesDB = data['propertiesDB'];\n    mainConfig = data['clients'];\n    let tempClients = generateClients(data['clients'], propertiesDB); //Properties DB seems to be passes by reference\n\n    setClients(tempClients);\n  };\n\n  const saveChanges = async () => {\n    console.log(\"Saving: \");\n\n    try {\n      await fetch(`/getData/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(mainConfig)\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (clients.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), clients, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: () => saveChanges(),\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: () => initController(),\n        children: \"Get Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Waiting for clients...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Controller, \"hlxqBwWcTyhaGlUbDOHKVgNxwg0=\");\n\n_c = Controller;\nexport default Controller;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controller\");","map":{"version":3,"names":["Button","Client","React","useState","loadYAML","mainConfig","Controller","props","clients","setClients","yamlFile","console","log","changeValue","clientNumber","keyHistory","newValue","client","i","length","generateClients","json","propertiesDB","tempArray","clientData","Object","entries","push","getData","req","fetch","method","err","initController","data","tempClients","saveChanges","headers","body","JSON","stringify","textAlign"],"sources":["C:/Code/ReactUI/React/reactui/src/Controller.js"],"sourcesContent":["import Button from '@mui/material/Button';\r\nimport Client from './Client.js';\r\nimport React, { useState } from 'react';\r\n\r\nimport {loadYAML} from './YAML.js';\r\nlet mainConfig;\r\n\r\nfunction Controller(props){\r\n    const [clients, setClients] = useState([]);\r\n\r\n    const yamlFile = loadYAML(\"test.yml\");\r\n    console.log(\"Controller rerender\");\r\n    \r\n    const changeValue = ([clientNumber, [keyHistory, newValue]]) => {//Array destructuring. Will take the array of property and value and make it into two variables. \r\n        let client = mainConfig[clientNumber];\r\n        console.log(client);\r\n        for(let i = 0; i < keyHistory.length - 1; i++){//Go through keyhistory (except last one). Now client is pointing to the last object which is the {proprety: value}.\r\n            client = client[keyHistory[i]];\r\n        }\r\n        client[keyHistory[keyHistory.length - 1]] = newValue;\r\n        console.log(client);\r\n       console.log(mainConfig);\r\n    }\r\n    const generateClients = (json, propertiesDB) => {\r\n        let tempArray = [];\r\n        for(const [clientNumber, clientData] of Object.entries(json)){\r\n            tempArray.push(<Client sx={{}}key={clientNumber} clientNumber={clientNumber} properties={clientData} propertiesDB={propertiesDB} onValueChange={changeValue}></Client>);\r\n        }\r\n        return tempArray;\r\n    }\r\n\r\n    const getData = async () => {\r\n        try{\r\n            const req = await fetch(`/getData/`, {method: 'GET'});\r\n            const json = await req.json();\r\n            return json;\r\n        }\r\n        catch(err){\r\n            console.log(\"Error fetching data\");\r\n        }\r\n\r\n    }\r\n    const initController = () => {\r\n        const data = getData();\r\n        const propertiesDB = data['propertiesDB'];\r\n        mainConfig = data['clients'];\r\n        let tempClients = generateClients(data['clients'], propertiesDB);//Properties DB seems to be passes by reference\r\n        setClients(tempClients);\r\n    }\r\n\r\n    const saveChanges = async () => {\r\n       console.log(\"Saving: \");\r\n       try{\r\n            await fetch(`/getData/`, \r\n            {\r\n                method:'POST', \r\n                headers:{'Content-Type':'application/json'}, \r\n                body: JSON.stringify(mainConfig)\r\n            }\r\n        );\r\n       }\r\n       catch(err){\r\n        console.log(err);\r\n       }\r\n       \r\n       \r\n    }\r\n\r\n\r\n    if(clients.length > 0){\r\n        return(\r\n            <div style={{textAlign: 'center'}}>\r\n                <h1>\r\n                    Controls\r\n                </h1>\r\n                {clients}\r\n                {/* <Client properties={properties} onValueChange={changeValue}></Client> */}\r\n                {/* <ValueChanger onValueChange={sendChange} name=\"temperature\" value={10}></ValueChanger> */}\r\n                <Button variant=\"contained\" color=\"success\" onClick={() => saveChanges()}>Save Changes</Button>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"success\" onClick={() => initController()}>Get Data</Button>\r\n                <h1>Waiting for clients...</h1>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Controller;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}