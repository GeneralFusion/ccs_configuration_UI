{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\ReactUI\\\\React\\\\reactui\\\\src\\\\Controller.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@mui/material/Button';\nimport Client from './Client.js';\nimport React, { useState } from 'react';\nimport { loadYAML } from './YAML.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet mainConfig;\n\nfunction Controller(props) {\n  _s();\n\n  const [clients, setClients] = useState([]);\n  const yamlFile = loadYAML(\"test.yml\");\n  console.log(\"Controller rerender\");\n\n  const changeValue = clientNumber => {\n    //Array destructuring. Will take the array of property and value and make it into two variables. \n    //clients[clientNumber][property] = value;\n    console.log(clientNumber);\n    console.log(mainConfig);\n  };\n\n  const generateClients = (json, propertiesDB) => {\n    let tempArray = [];\n\n    for (const [clientNumber, clientData] of Object.entries(json)) {\n      tempArray.push( /*#__PURE__*/_jsxDEV(Client, {\n        clientNumber: clientNumber,\n        properties: clientData,\n        propertiesDB: propertiesDB,\n        onValueChange: changeValue\n      }, clientNumber, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 28\n      }, this));\n    }\n\n    return tempArray;\n  };\n\n  const getClient = async clientNumber => {\n    const req = await fetch(`/getData/`, {\n      method: 'GET'\n    });\n    const json = await req.json();\n    const propertiesDB = json['propertiesDB'];\n    mainConfig = json['clients'];\n    console.log(req);\n    let tempClients = generateClients(json['clients'], propertiesDB); //Properties DB seems to be passes by reference\n\n    setClients(tempClients); //setProperties(json);\n    //Set properties to json. Should update state. \n  };\n\n  const saveChanges = async clientNumber => {\n    console.log(\"Saving: \");\n    let req = await fetch(`/getData/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(mainConfig)\n    });\n    let json = await req.json(); //Check for errors\n\n    console.log(json);\n  };\n\n  if (clients.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello this is \", props.name, \" \\u2126\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), clients, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: () => saveChanges(1),\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: () => getClient(1),\n        children: \"Get Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Waiting for clients...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Controller, \"hlxqBwWcTyhaGlUbDOHKVgNxwg0=\");\n\n_c = Controller;\nexport default Controller;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controller\");","map":{"version":3,"names":["Button","Client","React","useState","loadYAML","mainConfig","Controller","props","clients","setClients","yamlFile","console","log","changeValue","clientNumber","generateClients","json","propertiesDB","tempArray","clientData","Object","entries","push","getClient","req","fetch","method","tempClients","saveChanges","headers","body","JSON","stringify","length","name"],"sources":["C:/Code/ReactUI/React/reactui/src/Controller.js"],"sourcesContent":["import Button from '@mui/material/Button';\r\nimport Client from './Client.js';\r\nimport React, { useState } from 'react';\r\n\r\nimport {loadYAML} from './YAML.js';\r\nlet mainConfig;\r\n\r\nfunction Controller(props){\r\n    const [clients, setClients] = useState([]);\r\n\r\n    const yamlFile = loadYAML(\"test.yml\");\r\n    console.log(\"Controller rerender\");\r\n    \r\n    const changeValue = (clientNumber) => {//Array destructuring. Will take the array of property and value and make it into two variables. \r\n       //clients[clientNumber][property] = value;\r\n        console.log(clientNumber);\r\n       \r\n       console.log(mainConfig);\r\n    }\r\n    const generateClients = (json, propertiesDB) => {\r\n        let tempArray = [];\r\n        for(const [clientNumber, clientData] of Object.entries(json)){\r\n            tempArray.push(<Client key={clientNumber} clientNumber={clientNumber} properties={clientData} propertiesDB={propertiesDB} onValueChange={changeValue}></Client>);\r\n        }\r\n        return tempArray;\r\n    }\r\n\r\n    const getClient = async (clientNumber) => {\r\n        const req = await fetch(`/getData/`, {method: 'GET'});\r\n        const json = await req.json();\r\n        const propertiesDB = json['propertiesDB'];\r\n        mainConfig = json['clients'];\r\n        console.log(req);\r\n\r\n        let tempClients = generateClients(json['clients'], propertiesDB);//Properties DB seems to be passes by reference\r\n        setClients(tempClients);\r\n\r\n        //setProperties(json);\r\n        //Set properties to json. Should update state. \r\n    }\r\n\r\n    const saveChanges = async (clientNumber) => {\r\n       console.log(\"Saving: \");\r\n       \r\n       let req = await fetch(`/getData/`, \r\n       {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(mainConfig)}\r\n       );\r\n       let json = await req.json();//Check for errors\r\n       console.log(json);\r\n       \r\n    }\r\n\r\n\r\n    if(clients.length > 0){\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    Hello this is {props.name} &#8486;\r\n                </h1>\r\n                {clients}\r\n                {/* <Client properties={properties} onValueChange={changeValue}></Client> */}\r\n                {/* <ValueChanger onValueChange={sendChange} name=\"temperature\" value={10}></ValueChanger> */}\r\n                <Button variant=\"contained\" color=\"success\" onClick={() => saveChanges(1)}>Save Changes</Button>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"success\" onClick={() => getClient(1)}>Get Data</Button>\r\n                <h1>Waiting for clients...</h1>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Controller;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}