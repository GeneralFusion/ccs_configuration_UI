{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\ReactUI\\\\React\\\\reactui\\\\src\\\\ScopeChanger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@mui/material/Unstable_Grid2/Grid2';\nimport Box from '@mui/material/Box';\nimport { Accordion, AccordionSummary, AccordionDetails, Button } from '@mui/material';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ValueChanger from './ValueChanger';\nimport ChannelChanger from './ChannelChanger.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultChannel = {\n  \"bwLimit\": false,\n  \"coupling\": \"A1M\",\n  \"id\": \"ch1\",\n  \"name\": \"IFxxx_CO2_refINTERSCOPE1\",\n  \"probe\": 10,\n  \"tdiv\": \"2MS\",\n  \"timeOffset\": \"12MS\",\n  \"vdiv\": \"1v\",\n  \"voltageOffset\": 0\n};\nlet childKey = 0; //This is to ensure that the key of the channel changes each re render. So the channel will actually be remade.\n\nlet setDefaults = false;\n\nfunction ScopeChanger(props) {\n  _s();\n\n  const properties = props.value;\n  const newKeyHistory = [...props.keyHistory, props.scopeIndex];\n  const [currentType, setCurrentType] = useState(properties['type']);\n  const scopeProperties = useRef({ ...props.value\n  });\n  let channels = [];\n  console.log(childKey);\n  const typeDB = props.scopesDB[currentType];\n\n  const sendChange = newValue => {\n    const keyHistory = newValue[0];\n    const keyHistoryLength = keyHistory.length;\n    let firstIndex = keyHistoryLength - 1;\n\n    while (keyHistory[firstIndex] !== 'Scopes') {\n      firstIndex--;\n    }\n\n    firstIndex += 2; //Add 2 because firstIndex is currently at current 'Scope'. Go to the property\n\n    let tempObj = scopeProperties.current;\n\n    for (let i = firstIndex; i < keyHistoryLength - 1; i++) {\n      tempObj = tempObj[keyHistory[i]];\n    }\n\n    tempObj[keyHistory[keyHistoryLength - 1]] = newValue[1];\n    console.log(scopeProperties.current);\n    saveChanges();\n  };\n\n  const saveChanges = () => {\n    props.onValueChange([[...props.keyHistory, 'channelsConfigSettings'], scopeProperties.current]);\n  };\n\n  const changeScopeType = newType => {\n    setDefaults = true;\n    console.log(`${currentType} | ${newType[1]}`);\n    setCurrentType(newType[1]); //sendChange(newType);\n  };\n\n  const getDefaultChannel = () => {\n    let returnChannel = {};\n\n    for (const [property, value] of Object.entries(typeDB['channelProperties'])) {\n      returnChannel[property] = value['defaultValue'];\n    }\n\n    return returnChannel;\n  };\n\n  const channelUpdate = channel => {\n    if (!scopeProperties.current['activeChannels'].includes(channel)) {\n      console.log(\"Channel not enabled currently\");\n      scopeProperties.current['activeChannels'].push(channel);\n      scopeProperties.current['channelsConfigSettings'][channel] = getDefaultChannel();\n    } else {\n      delete scopeProperties.current['channelsConfigSettings'][channel];\n      scopeProperties.current['activeChannels'].splice(scopeProperties.current['activeChannels'].indexOf(channel), 1);\n    }\n\n    console.log(scopeProperties.current); //sendChange([[...props.keyHistory, scopeIndex, 'activeChannels'], activeChannels]);\n    //sendChange([[...props.keyHistory, scopeIndex, 'channelsConfigSettings'], channelProperties]);\n  };\n\n  const nameUpdates = newName => {\n    sendChange(newName);\n  };\n\n  for (let channelIndex = 1; channelIndex <= 8; channelIndex++) {\n    let isActive = scopeProperties.current['activeChannels'].includes(channelIndex);\n    channels.push( /*#__PURE__*/_jsxDEV(ImageListItem, {\n      children: /*#__PURE__*/_jsxDEV(ChannelChanger, {\n        value: isActive ? scopeProperties.current['channelsConfigSettings'][channelIndex] : false,\n        setDefaults: setDefaults,\n        channelNumber: channelIndex,\n        isActive: isActive,\n        keyHistory: [...newKeyHistory, 'channelsConfigSettings', channelIndex],\n        propertiesDB: typeDB['channelProperties'],\n        onValueChange: sendChange,\n        channelUpdate: channelUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)\n    }, childKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this));\n    childKey++;\n  }\n\n  console.log(scopeProperties.current);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    columns: 16,\n    spacing: 1,\n    sx: {\n      px: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'connectionString',\n        value: properties['connectionString'],\n        keyHistory: newKeyHistory,\n        propertiesDB: props.propertiesDB,\n        onValueChange: sendChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'waveFormat',\n        isDisabled: properties['waveFormat'] ? false : true,\n        value: properties['waveFormat'] ? properties['waveFormat'] : 'BYTE',\n        keyHistory: newKeyHistory,\n        propertiesDB: props.propertiesDB,\n        onValueChange: sendChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'name',\n        value: properties['name'],\n        keyHistory: newKeyHistory,\n        propertiesDB: props.propertiesDB,\n        onValueChange: nameUpdates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'filePath',\n        value: properties['filePath'],\n        keyHistory: newKeyHistory,\n        propertiesDB: props.propertiesDB,\n        onValueChange: sendChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'fileFormat',\n        value: properties['fileFormat'],\n        keyHistory: newKeyHistory,\n        propertiesDB: props.propertiesDB,\n        onValueChange: sendChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'type',\n        value: properties['type'],\n        keyHistory: newKeyHistory,\n        propertiesDB: props.propertiesDB,\n        onValueChange: changeScopeType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'triggerType',\n        value: properties['triggerType'],\n        keyHistory: newKeyHistory,\n        propertiesDB: props.propertiesDB,\n        onValueChange: sendChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'memSize',\n        value: properties['memSize'],\n        keyHistory: newKeyHistory,\n        propertiesDB: props.propertiesDB,\n        onValueChange: sendChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'tdiv',\n        isDisabled: typeDB['tdiv']['isDisabled'],\n        value: typeDB['tdiv']['isDisabled'] || setDefaults ? typeDB['tdiv']['defaultValue'] : properties[typeDB['tdiv']['name']],\n        keyHistory: newKeyHistory,\n        propertiesDB: typeDB,\n        onValueChange: sendChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'samplingRate',\n        isDisabled: typeDB['samplingRate']['isDisabled'],\n        value: properties['samplingRate'] ? properties['samplingRate'] : 0,\n        keyHistory: newKeyHistory,\n        propertiesDB: props.propertiesDB,\n        onValueChange: sendChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'timeOffset',\n        isDisabled: typeDB['timeOffset']['isDisabled'],\n        value: typeDB['timeOffset']['isDisabled'] ? typeDB['timeOffset']['defaultValue'] : properties['timeOffset'],\n        keyHistory: newKeyHistory,\n        propertiesDB: typeDB,\n        onValueChange: sendChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'triggerLevel',\n        isDisabled: typeDB['triggerLevel']['isDisabled'],\n        value: typeDB['triggerLevel']['isDisabled'] || setDefaults ? typeDB['triggerLevel']['defaultValue'] : properties[typeDB['triggerLevel']['name']],\n        keyHistory: newKeyHistory,\n        propertiesDB: typeDB,\n        onValueChange: sendChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(ValueChanger, {\n        property: 'triggerDelay',\n        isDisabled: typeDB['triggerDelay']['isDisabled'],\n        value: typeDB['triggerDelay']['isDisabled'] || setDefaults ? typeDB['triggerDelay']['defaultValue'] : properties[typeDB['triggerDelay']['name']],\n        keyHistory: newKeyHistory,\n        propertiesDB: typeDB,\n        onValueChange: sendChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 16,\n      children: /*#__PURE__*/_jsxDEV(ImageList, {\n        sx: {\n          gridAutoFlow: \"column\",\n          gridTemplateColumns: \"repeat(auto-fill,minmax(25%,1fr)) !important\",\n          gridAutoColumns: \"minmax(25%, 1fr)\",\n          overflowY: 'hidden'\n        },\n        children: channels\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      md: 16,\n      xs: 16,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: saveChanges,\n        children: \"Save Channels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ScopeChanger, \"ThFdJfJQQykY7QlkxffSeZctwI0=\");\n\n_c = ScopeChanger;\nexport default ScopeChanger;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScopeChanger\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Grid","Box","Accordion","AccordionSummary","AccordionDetails","Button","ImageList","ImageListItem","ValueChanger","ChannelChanger","defaultChannel","childKey","setDefaults","ScopeChanger","props","properties","value","newKeyHistory","keyHistory","scopeIndex","currentType","setCurrentType","scopeProperties","channels","console","log","typeDB","scopesDB","sendChange","newValue","keyHistoryLength","length","firstIndex","tempObj","current","i","saveChanges","onValueChange","changeScopeType","newType","getDefaultChannel","returnChannel","property","Object","entries","channelUpdate","channel","includes","push","splice","indexOf","nameUpdates","newName","channelIndex","isActive","px","propertiesDB","gridAutoFlow","gridTemplateColumns","gridAutoColumns","overflowY"],"sources":["C:/Code/ReactUI/React/reactui/src/ScopeChanger.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport Grid from '@mui/material/Unstable_Grid2/Grid2';\r\nimport Box from '@mui/material/Box';\r\nimport {Accordion, AccordionSummary, AccordionDetails, Button} from '@mui/material';\r\n\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport ValueChanger from './ValueChanger';\r\nimport ChannelChanger from './ChannelChanger.js';\r\nconst defaultChannel = {\r\n    \"bwLimit\": false,\r\n    \"coupling\": \"A1M\",\r\n    \"id\": \"ch1\",\r\n    \"name\": \"IFxxx_CO2_refINTERSCOPE1\",\r\n    \"probe\": 10,\r\n    \"tdiv\": \"2MS\",\r\n    \"timeOffset\": \"12MS\",\r\n    \"vdiv\": \"1v\",\r\n    \"voltageOffset\": 0\r\n};\r\n\r\nlet childKey = 0;//This is to ensure that the key of the channel changes each re render. So the channel will actually be remade.\r\nlet setDefaults = false;\r\n\r\nfunction ScopeChanger(props){\r\n\r\n    const properties = props.value;\r\n    const newKeyHistory = [...props.keyHistory, props.scopeIndex];\r\n    const [currentType, setCurrentType] = useState(properties['type']);\r\n    const scopeProperties = useRef({...props.value});\r\n\r\n\r\n    let channels = [];\r\n\r\n\r\n    \r\n    console.log(childKey);\r\n\r\n    const typeDB = props.scopesDB[currentType];\r\n    const sendChange = (newValue) => {\r\n        const keyHistory = newValue[0];\r\n        const keyHistoryLength = keyHistory.length;\r\n        let firstIndex = keyHistoryLength - 1;\r\n        while(keyHistory[firstIndex] !== 'Scopes'){\r\n            firstIndex--;\r\n        }\r\n        firstIndex += 2;//Add 2 because firstIndex is currently at current 'Scope'. Go to the property\r\n        let tempObj = scopeProperties.current;\r\n        for(let i = firstIndex; i < keyHistoryLength - 1; i++){\r\n            tempObj = tempObj[keyHistory[i]];\r\n        }\r\n        tempObj[keyHistory[keyHistoryLength - 1]] = newValue[1];\r\n        console.log(scopeProperties.current);\r\n        saveChanges();\r\n    }\r\n    const saveChanges = () => {\r\n        props.onValueChange([[...props.keyHistory, 'channelsConfigSettings'], scopeProperties.current]);\r\n    }\r\n    const changeScopeType = (newType) => {\r\n        setDefaults = true;\r\n        console.log(`${currentType} | ${newType[1]}`);\r\n\r\n        setCurrentType(newType[1]);\r\n        //sendChange(newType);\r\n    }\r\n    \r\n    const getDefaultChannel = () => {\r\n        let returnChannel = {};\r\n        for(const [property, value] of Object.entries(typeDB['channelProperties'])){\r\n            returnChannel[property] = value['defaultValue'];\r\n        } \r\n        return(returnChannel);\r\n    }\r\n    const channelUpdate = (channel) => {\r\n        \r\n        if(!(scopeProperties.current)['activeChannels'].includes(channel)){\r\n            console.log(\"Channel not enabled currently\");\r\n             (scopeProperties.current)['activeChannels'].push(channel);\r\n            (scopeProperties.current)['channelsConfigSettings'][channel] = getDefaultChannel();\r\n        }\r\n        else{\r\n            delete (scopeProperties.current)['channelsConfigSettings'][channel];\r\n            (scopeProperties.current)['activeChannels'].splice((scopeProperties.current)['activeChannels'].indexOf(channel), 1);\r\n        }\r\n        console.log(scopeProperties.current);\r\n\r\n        //sendChange([[...props.keyHistory, scopeIndex, 'activeChannels'], activeChannels]);\r\n        //sendChange([[...props.keyHistory, scopeIndex, 'channelsConfigSettings'], channelProperties]);\r\n        \r\n    }\r\n\r\n    const nameUpdates = (newName) => {\r\n        sendChange(newName);\r\n    }\r\n    \r\n    for(let channelIndex = 1; channelIndex <= 8; channelIndex++){\r\n        let isActive = (scopeProperties.current)['activeChannels'].includes(channelIndex);\r\n        channels.push(\r\n                <ImageListItem key={childKey}>\r\n                    <ChannelChanger \r\n                    value={isActive ? scopeProperties.current['channelsConfigSettings'][channelIndex] : false} \r\n                    setDefaults={setDefaults} \r\n                    channelNumber={channelIndex} \r\n                    isActive={isActive} \r\n                    keyHistory={[...newKeyHistory, 'channelsConfigSettings', channelIndex]} \r\n                    propertiesDB={typeDB['channelProperties']} \r\n                    onValueChange={sendChange} \r\n                    channelUpdate={channelUpdate}></ChannelChanger>\r\n                </ImageListItem>\r\n        )\r\n        childKey++;\r\n    }\r\n    console.log(scopeProperties.current);\r\n    return(\r\n\r\n              \r\n        \r\n            <Grid container columns={16} spacing={1} sx={{px: 1}} >\r\n            {/* ROW 1 */}\r\n            <Grid md={3}>\r\n                <ValueChanger property={'connectionString'} value={properties['connectionString']} keyHistory={newKeyHistory} propertiesDB={props.propertiesDB} onValueChange={sendChange}></ValueChanger>\r\n            </Grid>\r\n            <Grid md={3}>\r\n                <ValueChanger property={'waveFormat'} isDisabled={properties['waveFormat'] ? false : true} value={properties['waveFormat'] ? properties['waveFormat'] : 'BYTE'} keyHistory={newKeyHistory} propertiesDB={props.propertiesDB} onValueChange={sendChange}></ValueChanger>\r\n            </Grid>\r\n            <Grid md={4}>\r\n                <ValueChanger property={'name'} value={properties['name']} keyHistory={newKeyHistory} propertiesDB={props.propertiesDB} onValueChange={nameUpdates}></ValueChanger>\r\n            </Grid>\r\n            <Grid md={3}>\r\n                <ValueChanger property={'filePath'} value={properties['filePath']} keyHistory={newKeyHistory} propertiesDB={props.propertiesDB} onValueChange={sendChange}></ValueChanger>\r\n            </Grid>\r\n            <Grid md={3}>\r\n                <ValueChanger property={'fileFormat'} value={properties['fileFormat']} keyHistory={newKeyHistory} propertiesDB={props.propertiesDB} onValueChange={sendChange}></ValueChanger>\r\n            </Grid>\r\n            {/* ROW 1 */}\r\n            {/* ROW 2 */}\r\n            <Grid md={2}>\r\n                <ValueChanger property={'type'} value={properties['type']} keyHistory={newKeyHistory} propertiesDB={props.propertiesDB} onValueChange={changeScopeType}></ValueChanger>\r\n            </Grid>\r\n            <Grid md={2}>\r\n                <ValueChanger property={'triggerType'} value={properties['triggerType']} keyHistory={newKeyHistory} propertiesDB={props.propertiesDB} onValueChange={sendChange}></ValueChanger>\r\n            </Grid>\r\n            <Grid md={2}>\r\n                <ValueChanger property={'memSize'} value={properties['memSize']} keyHistory={newKeyHistory} propertiesDB={props.propertiesDB} onValueChange={sendChange}></ValueChanger>\r\n            </Grid>\r\n            <Grid md={2}>\r\n                <ValueChanger property={'tdiv'} isDisabled={typeDB['tdiv']['isDisabled']} value={(typeDB['tdiv']['isDisabled'] || setDefaults) ? typeDB['tdiv']['defaultValue'] : properties[typeDB['tdiv']['name']]} keyHistory={newKeyHistory} propertiesDB={typeDB} onValueChange={sendChange}></ValueChanger>\r\n            </Grid>\r\n            <Grid md={2}>\r\n                <ValueChanger property={'samplingRate'} isDisabled={typeDB['samplingRate']['isDisabled']} value={properties['samplingRate'] ? properties['samplingRate'] : 0} keyHistory={newKeyHistory} propertiesDB={props.propertiesDB} onValueChange={sendChange}></ValueChanger>\r\n            </Grid>\r\n            <Grid md={2}>\r\n                <ValueChanger property={'timeOffset'} isDisabled={typeDB['timeOffset']['isDisabled']} value={(typeDB['timeOffset']['isDisabled']) ? typeDB['timeOffset']['defaultValue']: properties['timeOffset']} keyHistory={newKeyHistory} propertiesDB={typeDB} onValueChange={sendChange}></ValueChanger>\r\n            </Grid>\r\n            <Grid md={2}>\r\n                <ValueChanger property={'triggerLevel'} isDisabled={typeDB['triggerLevel']['isDisabled']} value={(typeDB['triggerLevel']['isDisabled'] || setDefaults) ? typeDB['triggerLevel']['defaultValue'] : properties[typeDB['triggerLevel']['name']]} keyHistory={newKeyHistory} propertiesDB={typeDB} onValueChange={sendChange}></ValueChanger>\r\n            </Grid>\r\n            <Grid md={2}>\r\n                <ValueChanger property={'triggerDelay'} isDisabled={typeDB['triggerDelay']['isDisabled'] }value={(typeDB['triggerDelay']['isDisabled'] || setDefaults) ? typeDB['triggerDelay']['defaultValue'] : properties[typeDB['triggerDelay']['name']]} keyHistory={newKeyHistory} propertiesDB={typeDB} onValueChange={sendChange}></ValueChanger>\r\n            </Grid>\r\n            {/* ROW 2 */}\r\n\r\n            {/* ROW 3 */}\r\n            \r\n            <Grid md={16}>\r\n            <ImageList\r\n            sx={{\r\n                gridAutoFlow: \"column\",\r\n                gridTemplateColumns: \"repeat(auto-fill,minmax(25%,1fr)) !important\",\r\n                gridAutoColumns: \"minmax(25%, 1fr)\",\r\n                overflowY: 'hidden',\r\n                \r\n                \r\n            }}\r\n            >\r\n                {channels}\r\n            </ImageList>\r\n            </Grid>\r\n            <Grid md={16} xs={16}>\r\n                <Button variant=\"outlined\" onClick={saveChanges}>\r\n                    Save Channels\r\n                </Button>\r\n        \r\n\r\n\r\n               \r\n\r\n            </Grid>\r\n            \r\n \r\n\r\n        \r\n            {/* ROW 3 */}\r\n\r\n\r\n        </Grid>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ScopeChanger;"],"mappings":"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"},"metadata":{},"sourceType":"module"}