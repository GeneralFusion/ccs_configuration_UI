{"ast":null,"code":"import _slicedToArray from\"C:/Code/ReactUI/React/reactui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Slider from'@mui/material/Slider';import{jsx as _jsx}from\"react/jsx-runtime\";function SliderChanger(props){var _useState=useState(props.value),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var handleChange=function handleChange(event,newValue){setValue(newValue);};var sendChange=function sendChange(){props.onValueChange(value);};return/*#__PURE__*/_jsx(Slider,{valueLabelDisplay:\"on\",value:value,onChange:handleChange,onChangeCommitted:sendChange});}export default SliderChanger;","map":{"version":3,"names":["React","useState","Slider","SliderChanger","props","value","setValue","handleChange","event","newValue","sendChange","onValueChange"],"sources":["C:/Code/ReactUI/React/reactui/src/SliderChanger.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport Slider from '@mui/material/Slider';\r\n\r\nfunction SliderChanger(props){\r\n    const [value, setValue] = useState(props.value);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const sendChange = () => {\r\n        props.onValueChange(value);\r\n    }\r\n    return(\r\n    \r\n            \r\n            <Slider valueLabelDisplay=\"on\" value={value} onChange={handleChange} onChangeCommitted={sendChange}></Slider>\r\n\r\n        )\r\n\r\n}\r\n\r\nexport default SliderChanger;"],"mappings":"mHAAA,MAAOA,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,OAAP,KAAmB,sBAAnB,C,2CAEA,QAASC,cAAT,CAAuBC,KAAvB,CAA6B,CACzB,cAA0BH,QAAQ,CAACG,KAAK,CAACC,KAAP,CAAlC,wCAAOA,KAAP,eAAcC,QAAd,eACA,GAAMC,aAAY,CAAG,QAAfA,aAAe,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACtCH,QAAQ,CAACG,QAAD,CAAR,CACH,CAFD,CAGA,GAAMC,WAAU,CAAG,QAAbA,WAAa,EAAM,CACrBN,KAAK,CAACO,aAAN,CAAoBN,KAApB,EACH,CAFD,CAGA,mBAGQ,KAAC,MAAD,EAAQ,iBAAiB,CAAC,IAA1B,CAA+B,KAAK,CAAEA,KAAtC,CAA6C,QAAQ,CAAEE,YAAvD,CAAqE,iBAAiB,CAAEG,UAAxF,EAHR,CAOH,CAED,cAAeP,cAAf"},"metadata":{},"sourceType":"module"}