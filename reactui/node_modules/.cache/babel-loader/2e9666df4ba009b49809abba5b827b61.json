{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\ReactUI\\\\React\\\\reactui\\\\src\\\\Controller.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@mui/material/Button';\nimport Client from './Client.js';\nimport React, { useState } from 'react';\nimport { loadYAML } from './YAML.js'; //let mainConfig;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Controller(props) {\n  _s();\n\n  const [clients, setClients] = useState([]);\n  const [mainConfig, setMainConfig] = useState();\n  const yamlFile = loadYAML(\"test.yml\");\n  console.log(\"Controller rerender\");\n\n  const changeValue = _ref => {\n    let [clientNumber, property, value] = _ref;\n    //Array destructuring. Will take the array of property and value and make it into two variables. \n    //clients[clientNumber][property] = value;\n    console.log(`Client ${clientNumber} Property: ${property} Value: ${value}`); //mainConfig[clientNumber][property] = value;\n\n    setMainConfig(x => {\n      x[clientNumber][property] = value;\n    });\n    console.log(mainConfig);\n  };\n\n  const getClient = async clientNumber => {\n    let req = await fetch(`/getData/`, {\n      method: 'GET'\n    });\n    console.log(req);\n    let json = await req.json(); //mainConfig = json;\n\n    setMainConfig(json); //PUT THIS INTO ANOTHER FUNCTION generateClientsArray()\n\n    let tempClients = [];\n\n    for (const [clientNumber, clientData] of Object.entries(json)) {\n      tempClients.push( /*#__PURE__*/_jsxDEV(Client, {\n        clientNumber: clientNumber,\n        properties: clientData,\n        onValueChange: changeValue\n      }, clientNumber, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 30\n      }, this));\n    }\n\n    console.log(tempClients);\n    setClients(tempClients); //setProperties(json);\n    //Set properties to json. Should update state. \n  };\n\n  const saveChanges = async clientNumber => {\n    console.log(\"Saving: \");\n    let req = await fetch(`/getData/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(mainConfig)\n    });\n    let json = await req.json(); //Check for errors\n\n    console.log(json);\n  };\n\n  if (clients.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello this is \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), clients, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: () => saveChanges(1),\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: () => getClient(1),\n        children: \"Get Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Waiting for properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Controller, \"wlcGZlBHjUz0MKWk6OMYAA3iZsk=\");\n\n_c = Controller;\nexport default Controller;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controller\");","map":{"version":3,"names":["Button","Client","React","useState","loadYAML","Controller","props","clients","setClients","mainConfig","setMainConfig","yamlFile","console","log","changeValue","clientNumber","property","value","x","getClient","req","fetch","method","json","tempClients","clientData","Object","entries","push","saveChanges","headers","body","JSON","stringify","length","name"],"sources":["C:/Code/ReactUI/React/reactui/src/Controller.js"],"sourcesContent":["import Button from '@mui/material/Button';\r\nimport Client from './Client.js';\r\nimport React, { useState } from 'react';\r\n\r\nimport {loadYAML} from './YAML.js';\r\n//let mainConfig;\r\nfunction Controller(props){\r\n    const [clients, setClients] = useState([]);\r\n    const [mainConfig, setMainConfig] = useState();\r\n    const yamlFile = loadYAML(\"test.yml\");\r\n    console.log(\"Controller rerender\");\r\n    \r\n    const changeValue = ([clientNumber,property, value]) => {//Array destructuring. Will take the array of property and value and make it into two variables. \r\n       //clients[clientNumber][property] = value;\r\n       console.log(`Client ${clientNumber} Property: ${property} Value: ${value}`);\r\n       //mainConfig[clientNumber][property] = value;\r\n       setMainConfig(x => {x[clientNumber][property] = value});\r\n       console.log(mainConfig);\r\n    }\r\n    \r\n    const getClient = async (clientNumber) => {\r\n        let req = await fetch(`/getData/`, {method: 'GET'});\r\n        console.log(req);\r\n        let json = await req.json();\r\n        //mainConfig = json;\r\n\r\n        setMainConfig(json);\r\n        //PUT THIS INTO ANOTHER FUNCTION generateClientsArray()\r\n        let tempClients = [];\r\n        for(const [clientNumber, clientData] of Object.entries(json)){\r\n            tempClients.push(<Client key={clientNumber} clientNumber={clientNumber} properties={clientData} onValueChange={changeValue}></Client>);\r\n        }\r\n        console.log(tempClients);\r\n        setClients(tempClients);\r\n\r\n        //setProperties(json);\r\n        //Set properties to json. Should update state. \r\n    }\r\n\r\n    const saveChanges = async (clientNumber) => {\r\n       console.log(\"Saving: \");\r\n       \r\n       let req = await fetch(`/getData/`, \r\n       {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(mainConfig)}\r\n       );\r\n       let json = await req.json();//Check for errors\r\n       console.log(json);\r\n       \r\n    }\r\n\r\n\r\n    if(clients.length > 0){\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    Hello this is {props.name}\r\n                </h1>\r\n                {clients}\r\n                {/* <Client properties={properties} onValueChange={changeValue}></Client> */}\r\n                {/* <ValueChanger onValueChange={sendChange} name=\"temperature\" value={10}></ValueChanger> */}\r\n                <Button variant=\"contained\" color=\"success\" onClick={() => saveChanges(1)}>Save Changes</Button>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"success\" onClick={() => getClient(1)}>Get Data</Button>\r\n\r\n                <h1>Waiting for properties</h1>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Controller;"],"mappings":"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"},"metadata":{},"sourceType":"module"}