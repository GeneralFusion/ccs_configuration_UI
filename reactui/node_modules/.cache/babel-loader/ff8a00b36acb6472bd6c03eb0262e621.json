{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\ReactUI\\\\React\\\\reactui\\\\src\\\\DropdownChanger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem'; // let optionsArray = [];\n// function getLabel(value, options){\n//     let label;\n//     for(let option of options){\n//         if(option['value'] == value){\n//             label = option['label'];\n//             break;  \n//         }\n//     }\n//     return label;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DropdownChanger(props) {\n  _s();\n\n  const [value, setValue] = useState(props.value);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    props.onValueChange(event.target.value);\n  };\n\n  console.log(props.options.selections);\n  return /*#__PURE__*/_jsxDEV(Select, {\n    value: value,\n    onChange: handleChange,\n    children: props.options.selections.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: option.value,\n      children: [option.label, \" \"]\n    }, option.value, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n\n_s(DropdownChanger, \"avGViNLCMF52AfdzrjD0mw5oVXc=\");\n\n_c = DropdownChanger;\nexport default DropdownChanger;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownChanger\");","map":{"version":3,"names":["React","useEffect","useState","Select","MenuItem","DropdownChanger","props","value","setValue","handleChange","event","target","onValueChange","console","log","options","selections","map","option","label"],"sources":["C:/Code/ReactUI/React/reactui/src/DropdownChanger.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n// let optionsArray = [];\r\n// function getLabel(value, options){\r\n//     let label;\r\n//     for(let option of options){\r\n//         if(option['value'] == value){\r\n//             label = option['label'];\r\n//             break;  \r\n//         }\r\n//     }\r\n//     return label;\r\n// }\r\nfunction DropdownChanger(props){\r\n    const [value, setValue] = useState(props.value);\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        props.onValueChange(event.target.value);\r\n    }\r\n    console.log(props.options.selections)\r\n    return(\r\n         <Select value={value} onChange={handleChange}>\r\n            {props.options.selections.map((option) => (\r\n                 <MenuItem key={option.value} value={option.value}>{option.label} </MenuItem>\r\n            ))}\r\n        </Select>\r\n           \r\n    )\r\n}\r\n\r\nexport default DropdownChanger;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;EAAA;;EAC3B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACC,KAAP,CAAlC;;EACA,MAAME,YAAY,GAAIC,KAAD,IAAW;IAC5BF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;IACAD,KAAK,CAACM,aAAN,CAAoBF,KAAK,CAACC,MAAN,CAAaJ,KAAjC;EACH,CAHD;;EAIAM,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,OAAN,CAAcC,UAA1B;EACA,oBACK,QAAC,MAAD;IAAQ,KAAK,EAAET,KAAf;IAAsB,QAAQ,EAAEE,YAAhC;IAAA,UACIH,KAAK,CAACS,OAAN,CAAcC,UAAd,CAAyBC,GAAzB,CAA8BC,MAAD,iBACzB,QAAC,QAAD;MAA6B,KAAK,EAAEA,MAAM,CAACX,KAA3C;MAAA,WAAmDW,MAAM,CAACC,KAA1D;IAAA,GAAeD,MAAM,CAACX,KAAtB;MAAA;MAAA;MAAA;IAAA,QADJ;EADJ;IAAA;IAAA;IAAA;EAAA,QADL;AAQH;;GAfQF,e;;KAAAA,e;AAiBT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}