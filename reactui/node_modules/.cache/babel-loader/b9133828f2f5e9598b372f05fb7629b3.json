{"ast":null,"code":"import _regeneratorRuntime from\"C:/Code/ReactUI/React/reactui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Code/ReactUI/React/reactui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Code/ReactUI/React/reactui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Button from'@mui/material/Button';import Client from'./Client.js';import React,{useState}from'react';import{loadYAML}from'./YAML.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var mainConfig;function Controller(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),clients=_useState2[0],setClients=_useState2[1];var yamlFile=loadYAML(\"test.yml\");console.log(\"Controller rerender\");var changeValue=function changeValue(_ref){var _ref2=_slicedToArray(_ref,3),clientNumber=_ref2[0],property=_ref2[1],value=_ref2[2];//Array destructuring. Will take the array of property and value and make it into two variables. \n//clients[clientNumber][property] = value;\nconsole.log(\"Client \".concat(clientNumber,\" Property: \").concat(property,\" Value: \").concat(value));mainConfig[clientNumber][property]=value;console.log(mainConfig);};var generateClients=function generateClients(json){var tempArray=[];for(var _i=0,_Object$entries=Object.entries(json);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),clientNumber=_Object$entries$_i[0],clientData=_Object$entries$_i[1];tempArray.push(/*#__PURE__*/_jsx(Client,{clientNumber:clientNumber,properties:clientData,onValueChange:changeValue},clientNumber));}return tempArray;};var getClient=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(clientNumber){var req,json,tempClients;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/getData/\",{method:'GET'});case 2:req=_context.sent;console.log(req);_context.next=6;return req.json();case 6:json=_context.sent;mainConfig=json;//PUT THIS INTO ANOTHER FUNCTION generateClientsArray()\ntempClients=generateClients(json);console.log(tempClients);setClients(tempClients);//setProperties(json);\n//Set properties to json. Should update state. \ncase 11:case\"end\":return _context.stop();}}},_callee);}));return function getClient(_x){return _ref3.apply(this,arguments);};}();var saveChanges=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(clientNumber){var req,json;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"Saving: \");_context2.next=3;return fetch(\"/getData/\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(mainConfig)});case 3:req=_context2.sent;_context2.next=6;return req.json();case 6:json=_context2.sent;//Check for errors\nconsole.log(json);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function saveChanges(_x2){return _ref4.apply(this,arguments);};}();if(clients.length>0){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Hello this is \",props.name]}),clients,/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"success\",onClick:function onClick(){return saveChanges(1);},children:\"Save Changes\"})]});}else{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"success\",onClick:function onClick(){return getClient(1);},children:\"Get Data\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Waiting for clients...\"})]});}}export default Controller;","map":{"version":3,"names":["Button","Client","React","useState","loadYAML","mainConfig","Controller","props","clients","setClients","yamlFile","console","log","changeValue","clientNumber","property","value","generateClients","json","tempArray","Object","entries","clientData","push","getClient","fetch","method","req","tempClients","saveChanges","headers","body","JSON","stringify","length","name"],"sources":["C:/Code/ReactUI/React/reactui/src/Controller.js"],"sourcesContent":["import Button from '@mui/material/Button';\r\nimport Client from './Client.js';\r\nimport React, { useState } from 'react';\r\n\r\nimport {loadYAML} from './YAML.js';\r\nlet mainConfig;\r\n\r\nfunction Controller(props){\r\n    const [clients, setClients] = useState([]);\r\n\r\n    const yamlFile = loadYAML(\"test.yml\");\r\n    console.log(\"Controller rerender\");\r\n    \r\n    const changeValue = ([clientNumber,property, value]) => {//Array destructuring. Will take the array of property and value and make it into two variables. \r\n       //clients[clientNumber][property] = value;\r\n       console.log(`Client ${clientNumber} Property: ${property} Value: ${value}`);\r\n       mainConfig[clientNumber][property] = value;\r\n       console.log(mainConfig);\r\n    }\r\n    const generateClients = (json) => {\r\n        let tempArray = [];\r\n        for(const [clientNumber, clientData] of Object.entries(json)){\r\n            tempArray.push(<Client key={clientNumber} clientNumber={clientNumber} properties={clientData} onValueChange={changeValue}></Client>);\r\n        }\r\n        return tempArray;\r\n    }\r\n\r\n    const getClient = async (clientNumber) => {\r\n        let req = await fetch(`/getData/`, {method: 'GET'});\r\n        console.log(req);\r\n        let json = await req.json();\r\n        mainConfig = json;\r\n        //PUT THIS INTO ANOTHER FUNCTION generateClientsArray()\r\n        let tempClients = generateClients(json);\r\n        console.log(tempClients);\r\n        setClients(tempClients);\r\n\r\n        //setProperties(json);\r\n        //Set properties to json. Should update state. \r\n    }\r\n\r\n    const saveChanges = async (clientNumber) => {\r\n       console.log(\"Saving: \");\r\n       \r\n       let req = await fetch(`/getData/`, \r\n       {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(mainConfig)}\r\n       );\r\n       let json = await req.json();//Check for errors\r\n       console.log(json);\r\n       \r\n    }\r\n\r\n\r\n    if(clients.length > 0){\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    Hello this is {props.name}\r\n                </h1>\r\n                {clients}\r\n                {/* <Client properties={properties} onValueChange={changeValue}></Client> */}\r\n                {/* <ValueChanger onValueChange={sendChange} name=\"temperature\" value={10}></ValueChanger> */}\r\n                <Button variant=\"contained\" color=\"success\" onClick={() => saveChanges(1)}>Save Changes</Button>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"success\" onClick={() => getClient(1)}>Get Data</Button>\r\n                <h1>Waiting for clients...</h1>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Controller;"],"mappings":"yWAAA,MAAOA,OAAP,KAAmB,sBAAnB,CACA,MAAOC,OAAP,KAAmB,aAAnB,CACA,MAAOC,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAAQC,QAAR,KAAuB,WAAvB,C,wFACA,GAAIC,WAAJ,CAEA,QAASC,WAAT,CAAoBC,KAApB,CAA0B,CACtB,cAA8BJ,QAAQ,CAAC,EAAD,CAAtC,wCAAOK,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,SAAQ,CAAGN,QAAQ,CAAC,UAAD,CAAzB,CACAO,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAEA,GAAMC,YAAW,CAAG,QAAdA,YAAc,MAAoC,kCAAlCC,YAAkC,UAArBC,QAAqB,UAAXC,KAAW,UAAC;AACtD;AACAL,OAAO,CAACC,GAAR,kBAAsBE,YAAtB,uBAAgDC,QAAhD,oBAAmEC,KAAnE,GACAX,UAAU,CAACS,YAAD,CAAV,CAAyBC,QAAzB,EAAqCC,KAArC,CACAL,OAAO,CAACC,GAAR,CAAYP,UAAZ,EACF,CALD,CAMA,GAAMY,gBAAe,CAAG,QAAlBA,gBAAkB,CAACC,IAAD,CAAU,CAC9B,GAAIC,UAAS,CAAG,EAAhB,CACA,6BAAwCC,MAAM,CAACC,OAAP,CAAeH,IAAf,CAAxC,gCAA6D,CAAzD,6DAAOJ,YAAP,uBAAqBQ,UAArB,uBACAH,SAAS,CAACI,IAAV,cAAe,KAAC,MAAD,EAA2B,YAAY,CAAET,YAAzC,CAAuD,UAAU,CAAEQ,UAAnE,CAA+E,aAAa,CAAET,WAA9F,EAAaC,YAAb,CAAf,EACH,CACD,MAAOK,UAAP,CACH,CAND,CAQA,GAAMK,UAAS,6FAAG,iBAAOV,YAAP,mKACEW,MAAK,aAAc,CAACC,MAAM,CAAE,KAAT,CAAd,CADP,QACVC,GADU,eAEdhB,OAAO,CAACC,GAAR,CAAYe,GAAZ,EAFc,sBAGGA,IAAG,CAACT,IAAJ,EAHH,QAGVA,IAHU,eAIdb,UAAU,CAAGa,IAAb,CACA;AACIU,WANU,CAMIX,eAAe,CAACC,IAAD,CANnB,CAOdP,OAAO,CAACC,GAAR,CAAYgB,WAAZ,EACAnB,UAAU,CAACmB,WAAD,CAAV,CAEA;AACA;AAXc,uDAAH,kBAATJ,UAAS,6CAAf,CAcA,GAAMK,YAAW,6FAAG,kBAAOf,YAAP,qIACjBH,OAAO,CAACC,GAAR,CAAY,UAAZ,EADiB,uBAGDa,MAAK,aACrB,CAACC,MAAM,CAAC,MAAR,CAAgBI,OAAO,CAAC,CAAC,eAAe,kBAAhB,CAAxB,CAA6DC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe5B,UAAf,CAAnE,CADqB,CAHJ,QAGbsB,GAHa,uCAMAA,IAAG,CAACT,IAAJ,EANA,QAMbA,IANa,gBAMW;AAC5BP,OAAO,CAACC,GAAR,CAAYM,IAAZ,EAPiB,wDAAH,kBAAXW,YAAW,8CAAjB,CAYA,GAAGrB,OAAO,CAAC0B,MAAR,CAAiB,CAApB,CAAsB,CAClB,mBACI,oCACI,uCACmB3B,KAAK,CAAC4B,IADzB,GADJ,CAIK3B,OAJL,cAOI,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,CAA4C,OAAO,CAAE,yBAAMqB,YAAW,CAAC,CAAD,CAAjB,EAArD,0BAPJ,GADJ,CAWH,CAZD,IAaI,CACA,mBACI,oCACI,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,CAA4C,OAAO,CAAE,yBAAML,UAAS,CAAC,CAAD,CAAf,EAArD,sBADJ,cAEI,8CAFJ,GADJ,CAOH,CACJ,CAGD,cAAelB,WAAf"},"metadata":{},"sourceType":"module"}