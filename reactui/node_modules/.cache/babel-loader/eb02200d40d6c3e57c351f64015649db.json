{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\ReactUI\\\\React\\\\reactui\\\\src\\\\Controller.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@mui/material/Button';\nimport Client from './Client.js';\nimport React, { useState } from 'react';\nimport { loadYAML } from './YAML.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Controller(props) {\n  _s();\n\n  const [clients, setClients] = useState();\n  const yamlFile = loadYAML(\"test.yml\");\n  const [properties, setProperties] = useState(undefined); //\n\n  const changeValue = _ref => {\n    let [property, value] = _ref;\n    //Array destructuring. Will take the array of property and value and make it into two variables. \n    properties[property] = value;\n  };\n\n  const getClient = async clientNumber => {\n    let req = await fetch(`/getData/`, {\n      method: 'GET'\n    });\n    console.log(req);\n    let json = await req.json();\n    console.log(json); //PUT THIS INTO ANOTHER FUNCTION\n\n    for (const [clientNumber, clientData] of Object.entries(json)) {\n      setClients(currentClients => {\n        [...currentClients, /*#__PURE__*/_jsxDEV(Client, {\n          clientNumber: clientNumber,\n          properties: clientData,\n          onValueChange: changeValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 37\n        }, this)];\n      });\n    } //setProperties(json);\n    //Set properties to json. Should update state. \n\n  };\n\n  const saveChanges = async clientNumber => {\n    console.log(\"Saving: \");\n    console.log(properties);\n    let req = await fetch(`/getData/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(properties)\n    });\n    let json = await req.json();\n    console.log(json);\n  };\n\n  if (properties) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello this is \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), clients, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: () => saveChanges(1),\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: () => getClient(1),\n        children: \"Get Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Waiting for properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Controller, \"AjAIyfbOlfsPO8G8brNrT4izQ3A=\");\n\n_c = Controller;\nexport default Controller;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controller\");","map":{"version":3,"names":["Button","Client","React","useState","loadYAML","Controller","props","clients","setClients","yamlFile","properties","setProperties","undefined","changeValue","property","value","getClient","clientNumber","req","fetch","method","console","log","json","clientData","Object","entries","currentClients","saveChanges","headers","body","JSON","stringify","name"],"sources":["C:/Code/ReactUI/React/reactui/src/Controller.js"],"sourcesContent":["import Button from '@mui/material/Button';\r\nimport Client from './Client.js';\r\nimport React, { useState } from 'react';\r\n\r\nimport {loadYAML} from './YAML.js';\r\nfunction Controller(props){\r\n    const [clients, setClients] = useState();\r\n    const yamlFile = loadYAML(\"test.yml\");\r\n    const [properties, setProperties] = useState(undefined);//\r\n    \r\n    const changeValue = ([property, value]) => {//Array destructuring. Will take the array of property and value and make it into two variables. \r\n        properties[property] = value;\r\n    }\r\n    \r\n    const getClient = async (clientNumber) => {\r\n        let req = await fetch(`/getData/`, {method: 'GET'});\r\n        console.log(req);\r\n        let json = await req.json();\r\n        console.log(json);\r\n        //PUT THIS INTO ANOTHER FUNCTION\r\n        for(const [clientNumber, clientData] of Object.entries(json)){\r\n            setClients(currentClients => {\r\n                [...currentClients, <Client clientNumber={clientNumber} properties={clientData} onValueChange={changeValue}></Client>]\r\n            })\r\n        }\r\n\r\n\r\n        //setProperties(json);\r\n        //Set properties to json. Should update state. \r\n    }\r\n\r\n    const saveChanges = async (clientNumber) => {\r\n       console.log(\"Saving: \");\r\n       console.log(properties);\r\n       let req = await fetch(`/getData/`, \r\n       {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(properties)}\r\n       );\r\n       let json = await req.json();\r\n       console.log(json);\r\n       \r\n    }\r\n\r\n\r\n    if(properties){\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    Hello this is {props.name}\r\n                </h1>\r\n                {clients}\r\n                {/* <Client properties={properties} onValueChange={changeValue}></Client> */}\r\n                {/* <ValueChanger onValueChange={sendChange} name=\"temperature\" value={10}></ValueChanger> */}\r\n                <Button variant=\"contained\" color=\"success\" onClick={() => saveChanges(1)}>Save Changes</Button>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Button variant=\"contained\" color=\"success\" onClick={() => getClient(1)}>Get Data</Button>\r\n\r\n                <h1>Waiting for properties</h1>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Controller;"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAAQC,QAAR,QAAuB,WAAvB;;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;EAAA;;EACtB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,EAAtC;EACA,MAAMM,QAAQ,GAAGL,QAAQ,CAAC,UAAD,CAAzB;EACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACS,SAAD,CAA5C,CAHsB,CAGkC;;EAExD,MAAMC,WAAW,GAAG,QAAuB;IAAA,IAAtB,CAACC,QAAD,EAAWC,KAAX,CAAsB;IAAC;IACxCL,UAAU,CAACI,QAAD,CAAV,GAAuBC,KAAvB;EACH,CAFD;;EAIA,MAAMC,SAAS,GAAG,MAAOC,YAAP,IAAwB;IACtC,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAE,WAAF,EAAc;MAACC,MAAM,EAAE;IAAT,CAAd,CAArB;IACAC,OAAO,CAACC,GAAR,CAAYJ,GAAZ;IACA,IAAIK,IAAI,GAAG,MAAML,GAAG,CAACK,IAAJ,EAAjB;IACAF,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAJsC,CAKtC;;IACA,KAAI,MAAM,CAACN,YAAD,EAAeO,UAAf,CAAV,IAAwCC,MAAM,CAACC,OAAP,CAAeH,IAAf,CAAxC,EAA6D;MACzDf,UAAU,CAACmB,cAAc,IAAI;QACzB,CAAC,GAAGA,cAAJ,eAAoB,QAAC,MAAD;UAAQ,YAAY,EAAEV,YAAtB;UAAoC,UAAU,EAAEO,UAAhD;UAA4D,aAAa,EAAEX;QAA3E;UAAA;UAAA;UAAA;QAAA,QAApB;MACH,CAFS,CAAV;IAGH,CAVqC,CAatC;IACA;;EACH,CAfD;;EAiBA,MAAMe,WAAW,GAAG,MAAOX,YAAP,IAAwB;IACzCI,OAAO,CAACC,GAAR,CAAY,UAAZ;IACAD,OAAO,CAACC,GAAR,CAAYZ,UAAZ;IACA,IAAIQ,GAAG,GAAG,MAAMC,KAAK,CAAE,WAAF,EACrB;MAACC,MAAM,EAAC,MAAR;MAAgBS,OAAO,EAAC;QAAC,gBAAe;MAAhB,CAAxB;MAA6DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAetB,UAAf;IAAnE,CADqB,CAArB;IAGA,IAAIa,IAAI,GAAG,MAAML,GAAG,CAACK,IAAJ,EAAjB;IACAF,OAAO,CAACC,GAAR,CAAYC,IAAZ;EAEF,CATD;;EAYA,IAAGb,UAAH,EAAc;IACV,oBACI;MAAA,wBACI;QAAA,6BACmBJ,KAAK,CAAC2B,IADzB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAIK1B,OAJL,eAOI,QAAC,MAAD;QAAQ,OAAO,EAAC,WAAhB;QAA4B,KAAK,EAAC,SAAlC;QAA4C,OAAO,EAAE,MAAMqB,WAAW,CAAC,CAAD,CAAtE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH,CAZD,MAaI;IACA,oBACI;MAAA,wBACI,QAAC,MAAD;QAAQ,OAAO,EAAC,WAAhB;QAA4B,KAAK,EAAC,SAAlC;QAA4C,OAAO,EAAE,MAAMZ,SAAS,CAAC,CAAD,CAApE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAGI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAQH;AACJ;;GA7DQX,U;;KAAAA,U;AAgET,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}